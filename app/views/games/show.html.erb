<div class="row">
	<div class="col s6 offset-s3">
		<h3><%= @game.name %></h3>
	</div> 
</div>
<div class="row">
	<div class="col s4">
		<div class="row">
			<div class="col s12">
			<button id="test-turn" data-letter="a" class="btn">Test Turn</button>
			</div>
		</div>
		<div class="row">
			<div class="col s12">
				<div class="letter" data-letter="a">A</div>
				<div class="letter" data-letter="b">B</div>
				<div class="letter" data-letter="c">C</div>
				<div class="letter" data-letter="d">D</div>
				<div class="letter" data-letter="e">E</div>
				<div class="letter" data-letter="f">F</div>
				<div class="letter" data-letter="g">G</div>
			</div>
		</div>

		<div class="row short">
			<div class="col s12">
				<div class="letter" data-letter="h">H</div>
				<div class="letter" data-letter="i">I</div>
				<div class="letter" data-letter="j">J</div>
				<div class="letter" data-letter="k">K</div>
				<div class="letter" data-letter="l">L</div>
				<div class="letter" data-letter="m">M</div>
			</div>
		</div>

		<div class="row">
			<div class="col s12">
				<div class="letter" data-letter="n">N</div>
				<div class="letter" data-letter="o">O</div>
				<div class="letter" data-letter="p">P</div>
				<div class="letter" data-letter="q">Q</div>
				<div class="letter" data-letter="r">R</div>
				<div class="letter" data-letter="s">S</div>
				<div class="letter" data-letter="t">T</div>
			</div>
		</div>

		<div class="row short">
			<div class="col s12">
				<div class="letter" data-letter="u">U</div>
				<div class="letter" data-letter="v">V</div>
				<div class="letter" data-letter="w">W</div>
				<div class="letter" data-letter="x">X</div>
				<div class="letter" data-letter="y">Y</div>
				<div class="letter" data-letter="z">Z</div>
			</div>
		</div>
	</div>
	<div class="col s4">
	hangman board for p1
	</div>
	<div class="col s4">
	p2 board
	</div>
</div>



<script type="text/javascript">
	$(document).ready(function () {
		//As soon as the page starts
		get_game();
		//begin grabbing the game state every 30 seconds
		var game_state = setInterval(function() { get_game() }, 5000);

		/**
		 * Get the correct or incorrect letters
		 * @param  bool is to toggle between correct/incorrect array
		 * @return Array
		 */
		function getLetters(bool){
			if(bool){
				return JSON.parse(localStorage.getItem('CSE3901_correct_letters') || "[]");
			} else {
				return JSON.parse(localStorage.getItem('CSE3901_incorrect_letters') || "[]");
			}
		}

		function setLetters(bool, array) {
			if(bool){
				localStorage.setItem('CSE3901_correct_letters', JSON.stringify(array));
			} else {
				localStorage.setItem('CSE3901_incorrect_letters', JSON.stringify(array));
			}
		}

		/**
		 * Set the game state in storage
		 * @param JSON game object
		 */
		function setGameStorage (game) {
			localStorage.setItem('CSE3901_game', JSON.stringify(game));
		}

		/**
		 * Get the game object
		 * @return JSON game object
		 */
		function getGameStorage (){
			return JSON.parse(localStorage.getItem('CSE3901_game')) || {};
		}

		/**
		 * Add a letter to either correct or incorrect array
		 * @param letter String
		 * @param bool 	boolean to toggle between correct and incorrect
		 */
		function addLetter(bool, letter){
			var letters = getLetters(bool);
			if(bool){
				//put it in correct array
				letters.push(letter);
				setLetters(true, letters);
				console.log('correct letter!')
				console.log(getLetters(bool));
			} else {
				//put it in incorrect array
				letters.push(letter);
				setLetters(false, letters);
				console.log('incorrect letter!!');
				console.log(getLetters(bool));
			}
		}

		/**
		 * Grab the current game word.
		 * @return String
		 */
		function getWord() {
			return JSON.parse(localStorage.getItem('CSE3901_game')).word || "";
		}

		/**
		 * Checks if user has won or lost
		 * @return integer: 1 => win, 0 => loss, 2 => neither 
		 */
		function checkWinLoss () {
			var target_word = getWord();
			var correct_letters = getLetters(true);
			var incorrect_letters = getLetters(false);

			if(correct_letters.length == target_word.length){
				return 1;
			} else if(incorrect_letters.length >= 5) {
				return 0;
			} else {
				return 2;
			}
		}

		/**
		 * Check if the letter is in the word to be guessed
		 * and if they won/lost neither
		 * @return boolean
		 */
		function handleLetter(letter) {
			var word = getWord();
			var count = 0;
			for(var i = 0; i < word.length; i++){
				if(word[i] == letter){
					count++;
				}
			}
			if(count == 0) {
			   	addLetter(false, letter);
			} else {
				for(var i = 0; i < count; i++){
					addLetter(true, letter);
				}
			}

			var game_status = checkWinLoss();

			send_data(game_status);
		}

		/**
		 * This method handles a letter click.
		 */
		$('.letter, #test-turn').click(function () {
			var letter = $(this).data('letter');
			handleLetter(letter);
		});

		/**
		 * This method gets the game state.
		 * @return data
		 */
		function get_game(){
			$.ajax({
				type:'GET',
				url: 'http://localhost:3000/run-game',
				data: {
					id: <%= @game.id %>
				},
				dataType: 'JSON',
				success: function (data){
					console.log('in get data return');
					console.log(data);
					setGameStorage(data);
					//if current user is first user and it is their turn
					if(<%= current_user.id %> == data.first_user_id && data.turn == 0){
						//unlock the board
						switch_turn(true);
					} else if(<%= current_user.id %> == data.second_user_id && data.turn == 1) {
						//if current user is second user and it is their turn
						//unlock the board
						switch_turn(true);
					} else if (data.game_over) {
						stopGame();
					} else if (<%= current_user.id %> == data.first_user_id && data.turn == 1) {
						switch_turn(false);
					} else if(<%= current_user.id %> == data.second_user_id && data.turn == 0) {
						switch_turn(false);
					}
				},
				error: function (err) {
					console.log(err);
				}
			})
		}

		/**
		 * Send data back as post to server
		 * @param  game status
		 * @return nothing
		 */
		function send_data (game_status) {
			var game = getGameStorage();
			var correct_letters = getLetters(true);
			var incorrect_letters = getLetters(false);
			if (game.first_user_id == <%= @current_user.id %>) {
				//check if the first user just won or lost
				if(game_status == 1){
					game.game_over = true;
					game.winner = <%= @current_user.id %>;
					setGameStorage(post(game));
					stopGame();
				} else if(game_status == 0) {
					game.game_over = true;
					game.winner = game.second_user_id;
					setGameStorage(post(game));
					stopGame();
				} else {
					switch_turn(false);
					setGameStorage(post(game));
				}
			} else {
				//check if hte second user just won or lost
				if(game_status == 1){
					game.game_over = true;
					game.winner = <%= @current_user.id %>;
					setGameStorage(post(game));
					stopGame();
				} else if(game_status == 0) {
					game.game_over = true;
					game.winner = game.first_user_id;
					setGameStorage(post(game));
					stopGame();
				} else {
					switch_turn(false);
					setGameStorage(post(game));
				}
			}
		}

		/**
		 * This method sends a post back to the server.
		 * @param  the game object
		 */
		function post (data) {
			$.ajax({
				type:'POST',
				url: 'http://localhost:3000/run-game',
				data: data,
				dataType: 'JSON',
				success: function (data){
					console.log('post return data...');
					console.log(data);
					return data;
				},
				error: function (err) {
					console.log(err);
				}
			});
		}

		/**
		 * This method stops the update game method
		 */
		function stopGame () {
			console.log('stopping the game :)');
			clearInterval(game_state);
			setGameStorage({});
			setLetters(true, []);
			setLetters(false, []);
			$('.letter, #test-turn').hide();
			//display game over message
		}

		function switch_turn (check) {
			if(check){
				console.log('UNDISABLING THE BUTTON');
				$('.letter, #test-turn').show();
			} else {
				console.log('DISABLING THE BUTTON');
				$('.letter, #test-turn').hide();
			}
		}
	});
</script>